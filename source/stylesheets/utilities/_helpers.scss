@mixin last-margin {
  > *:last-child {
    margin-bottom: 0;
  }
}

@mixin margin-bottom ($margin-bottom: .8em) {
  margin-bottom: $margin-bottom;
  &:last-child {
    margin-bottom: 0;
  }
}

@mixin focus ($color: $secondary, $opacity: .4) {
  box-shadow: 0 0 4px rgba($color,$opacity);
  outline: none;
}

@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin gradient-horizontal-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: -webkit-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
  background-image: -o-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down, gets no color-stop at all for proper fallback
}

// Helpers
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

.reset-link{
  color: inherit;
  &:hover,
  &.active,
  &:focus{
    text-decoration: none;
  }
}

.list-reset{
  margin-left: 0;
  margin-right: 0;
  padding-left: 0;
  padding-right: 0;
  list-style: none;
}

.list-inline{
  > li{
    display: inline-block;
    vertical-align: top;
  }

  > dt{
    clear: both;
    margin-right: 0.3em;
  }

  > dt,
  > dd{
    float: left;
    margin-bottom: 0;
  }
}

.pull-right {
  float: right !important;
}

.pull-left {
  float: left !important;
}

.align-center{
  text-align: center;
}

.align-right {
  text-align: right;
}

.align-left {
  text-align: left;
}

.vertical-middle {
  vertical-align: middle;
}

.nowrapp {
  white-space: nowrap;
}

.vertical-relative{
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.hidden{
  display: none;
}

@each $color in $colors {
  .bg-#{nth($color, 1)} {
    background-color: nth($color, 2);
    @if(nth($color, 3)){
      color: nth($color, 3);
    }
  }

  .text-#{nth($color, 1)} {
    color: nth($color, 2);
  }
}
