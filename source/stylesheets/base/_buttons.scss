$btn-line-height: $components-line-height;
$btn-components-padding: $components-padding;

%btn {
  display: inline-block;
  vertical-align: middle;
  margin-bottom: 0; // For input.btn
  font-weight: normal;
  text-align: center;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  user-select: none;
  max-width: 100%;
  transition: all .2s ease-out;

  &.is-block{
    width: 100%;
    min-width: auto;
    margin-bottom: 1em;
  }

  &.is-wide{
    min-width: 12em;
  }
}

@mixin button-color($color, $bg, $border: transparent, $color--active: $color,
 $bg--active: darken($bg, 15%), $border--active: $border) {
  color: $color;
  background-color: $bg;
  border-color: $border;

  &:hover {
    color: $color--active;
    background-color: $bg--active;
    border-color: $border--active;
    outline: 0;
    text-decoration: none;
  }

  &:focus {
    @include focus($bg, .8);
    text-decoration: none;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
    pointer-events: none; // Future-proof disabling of clicks
    opacity: .65;
    box-shadow: none;
  }
}

@mixin button-size($padding, $font-size,
 $line-height, $border-radius) {
  padding: $padding;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

button{
  color: inherit;
  border: 0;
  background-color: transparent;
  padding: 0;
  margin: 0;
  appearance: none;
  &:hover,
  &:focus,
  &:active{
    outline: 0;
    text-decoration: none;
  }
}

.btn{
  @extend %btn;
  &:hover,
  &.active,
  &:focus{
    text-decoration: none;
  }
}

.btn-primary{
  @extend %btn;
  @include button-color(white,$primary);
  @include button-size($btn-components-padding, inherit, $btn-line-height, 3px);
}

.btn-primary-light{
  @extend %btn;
  @include button-color($primary,$primary-lighter, transparent,
    $primary, lighten($primary, 30%), $primary);
  @include button-size($btn-components-padding, inherit, $btn-line-height, 3px);
}

.btn-secondary{
  @extend %btn;
  @include button-color(white, $secondary-light);
  @include button-size($btn-components-padding, inherit, $btn-line-height, 3px);
}

.btn-secondary-light{
  @extend %btn;
  @include button-color($secondary-light, $secondary-lighter, transparent,
    $secondary-light, lighten($secondary-light, 45%), $secondary-light);
  @include button-size($btn-components-padding, inherit, $btn-line-height, 3px);
}

.btn-icon{
  @extend %btn;
  @include button-size($btn-components-padding, 1em, 2.2em, 50%);
  color: $font-color;
  border: 1px solid $border-color;
  width: 2.3em;
  height: 2.3em;
  opacity: .7;
  transform: scale(1);
  transition: all .2s ease-out;
  position: relative;

  //fix position icon
  &::before {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  &:hover{
    transform: scale(1.1);
    text-decoration: none;
    opacity: 1;
  }
}

.btn-collapse{
  $size: 30px;
  $color: $secondary-light;

  color: $color;
  width: $size + 10px;
  height: $size;
  cursor: pointer;
  outline: 0;
  overflow: hidden;
  transition: transform ease-in-out 250ms;
  top: 20px;

  @media screen and (min-width: $grid-breakpoint){
    display: none;
  }

  &.active{
    span{
      border-color: transparent;
      transform: translateY(-4px) translateX(-8px);

      &::before{
        transform: rotate(405deg) translateY(-1px) translateX(1px);
      }
      &::after{
        transform: rotate(315deg) translateY(12px) translateX(-13px);
      }
    }
  }

  span{
    display: block;
    width: 25px;
    position: relative;
    top: 3px;
    left: 50%;
    border-top: 3px solid;
    text-indent: 99999px;
    overflow: hidden;
    white-space: nowrap;
    transition: transform ease-in-out 250ms,border ease-in-out 250ms;
    transform: translateX(-50%);

    &::before,
    &::after{
      position: absolute;
      content: "";
      display: block;
      height: 3px;
      width: 25px;
      background: $color;
      transform-origin: 0 0;
      top: 0;
      transition: transform ease-in-out 450ms;
      transform: translateY(5px);
    }
    &:after{
      transform: translateY(13px);
    }
  }
}

